package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.Range;


@Autonomous(name = "Right 6")
public class Autonomous4 extends Library {
    DcMotor lf, lb, rf, rb;
    float [] omniValues = new float [4];
    int step = 1;

    public void forward (float rotations) {
        int position = lf.getCurrentPosition();
        while (lf.getCurrentPosition() < position - (rotations * 560)) {
            lf.setPower(-1);
            lb.setPower(-1);
            rf.setPower(1);
            rb.setPower(1);
        }
        lf.setPower(0);
        lb.setPower(0);
        rf.setPower(0);
        rb.setPower(0);
    }
    public void right (float rotations) {
        int position = lf.getCurrentPosition();
        while (lf.getCurrentPosition() < position - (rotations * 560)) {
            drive(1,-1,1,1);
        }
        drive(0,0,0,0);
    }
    public void left (float rotations) {
        int position = lf.getCurrentPosition();
        while (lf.getCurrentPosition() < position + (rotations * 560)) {
            drive(-1,1,1,-1);
        }
        drive(0,0,0,0);
    }
    public void back (float rotations) {
        int position = lf.getCurrentPosition();
        while (lf.getCurrentPosition() < position + (rotations * 560)) {
            drive(-1,-1,1,-1);
        }
        drive(0,0,0,0);
    }

    public void init() {
        hardwareInit();
    }
    public void loop() {
        switch (step) {
            case (1):
                right(inchConversion(6));
                step++;
                break;
            case (2):
                drive(0,0,0,0);
        }
    }
}